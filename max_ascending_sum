class Solution:
    def maxAscendingSum(self, nums):
        max_sum = nums[0]  # Initialize max sum with the first element
        current_sum = nums[0]  # Track current ascending subarray sum

        for i in range(1, len(nums)):
            if nums[i] > nums[i - 1]:  # Continue ascending subarray
                current_sum += nums[i]
            else:  # Reset for new subarray
                current_sum = nums[i]

            max_sum = max(max_sum, current_sum)

        return max_sum

# Example usage
solution = Solution()
print(solution.maxAscendingSum([10, 20, 30, 5, 10, 50]))  # Output: 65
print(solution.maxAscendingSum([10, 20, 30, 40, 50]))  # Output: 150
print(solution.maxAscendingSum([12, 17, 15, 13, 10, 11, 12]))  # Output: 33
